---
/**
 * Sección: Niveles de Seguridad Certificados
 * - Sin React (render estático).
 * - Toma contenido desde site.json (import * as siteData).
 */
import * as siteData from "../../site.json";
const data = siteData.securityLevels;

const colorClasses = {
  amber: {
    top: "from-[#00a280] to-[#4646a7]",
    ring: "ring-amber-200",
    badge: "bg-gradient-to-r from-[#00a280] via-[#01a182] to-[#4646a7] text-white",
  },
  blue: {
    top: "from-[#01a182] to-[#4646a7]",
    ring: "ring-sky-300",
    badge: "bg-gradient-to-r from-[#00a280] via-[#01a182] to-[#4646a7] text-white",
  },
  fuchsia: {
    top: "from-[#00a280] to-[#4646a7]",
    ring: "ring-fuchsia-200",
    badge: "bg-gradient-to-r from-[#00a280] via-[#01a182] to-[#4646a7] text-white",
  },
} as const;
---

<section id={data.id} class="relative">
  <div class="mx-auto max-w-7xl px-6 py-16 sm:py-20">
    <!-- Header -->
    <div class="text-center mb-10">
      <h2 class="text-2xl sm:text-4xl font-extrabold tracking-tight text-slate-900">
        {data.title}
      </h2>
      {data.subtitle && (
        <p class="mt-3 text-slate-500 max-w-3xl mx-auto">
          {data.subtitle}
        </p>
      )}
    </div>

    <!-- Cards -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      {data.levels.map((lvl) => {
        const colors = colorClasses[(lvl.color as keyof typeof colorClasses) || "blue"];
        return (
          <article
            class={[
              "relative rounded-2xl bg-gradient-to-b from-white to-[#F7FAFF] p-6 sm:p-7",
              "shadow-sm ring-1",
              lvl.recommended ? "ring-2 ring-[#4646a7]" : "ring-slate-200",
            ].join(" ")}
          >
            <!-- Top color bar -->
            <div class={`pointer-events-none absolute left-4 right-4 -top-1 h-1 rounded-full bg-gradient-to-r ${colors.top}`}></div>

            <!-- Badge -->
            {lvl.badge && (
              <span class={`absolute right-5 top-4 rounded-full px-3 py-1 text-xs font-semibold ${colors.badge} ring-1 ring-black/5`}>
                {lvl.badge}
              </span>
            )}

            <!-- Title / Tagline -->
            <h3 class="text-xl sm:text-2xl font-extrabold text-slate-900">{lvl.name}</h3>
            {lvl.tagline && <p class="mt-1 text-slate-500">{lvl.tagline}</p>}

            <!-- Features -->
            <ul class="mt-5 space-y-3">
              {lvl.features.map((f) => (
                <li class="flex items-start gap-2">
                  <svg class="h-5 w-5 text-sky-600 mt-0.5" viewBox="0 0 24 24" fill="none" stroke="#4646a7" stroke-width="2">
                    <path d="M20 6L9 17l-5-5" />
                  </svg>
                  <span class="text-slate-700">{f}</span>
                </li>
              ))}
            </ul>

            <!-- Ideal para -->
            {lvl.ideal && (
              <div class="mt-6">
                <span class="block text-slate-500 text-sm">Ideal para:</span>
                <p class="mt-1 font-semibold text-slate-900">{lvl.ideal}</p>
              </div>
            )}
          </article>
        );
      })}
    </div>
  </div>
</section>
